<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyDevoxx.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:MyDevoxx.ViewModel"
    xmlns:control="using:MyDevoxx.UserControls"
    xmlns:converter="using:MyDevoxx.Converter.View"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    x:Class="MyDevoxx.Views.TalkDetailsView"
    mc:Ignorable="d"
    FontFamily="/Assets/fonts/Roboto-Regular.ttf#Roboto"
    DataContext="{Binding TalkDetails, Source={StaticResource Locator}}">

    <Page.Resources>
        <converter:EventDateTimeConverter x:Key="EventDateTimeConverter"/>
        <converter:EventToSpeakerListConverter x:Key="EventToSpeakerListConverter"/>
        <converter:EventStarredToImageConverter x:Key="EventStarredToImageConverter"/>
        <converter:VotingOpacityConverter x:Key="VotingOpacityConverter"/>
        <converter:NegBooleanToVisibilityConverter x:Key="NegBooleanToVisibilityConverter"/>
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converter:SpeakerImageConverter x:Name="SpeakerImageConverter"/>
    </Page.Resources>

    <Page.Background>
        <StaticResource ResourceKey="DevoxxBackgroundShadowBrush"/>
    </Page.Background>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="150"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Image Source="ms-appx:///Assets/talk_background.png" VerticalAlignment="Bottom" HorizontalAlignment="Center" Stretch="UniformToFill"/>
            <Image Source="ms-appx:///Assets/arrow.left.png" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" Tapped="BackImage_Tapped" />
            <TextBlock Text="{Binding Event.title, TargetNullValue=TITLE}"
				        FontSize="20"
				        FontFamily="{StaticResource RobotoRegular}" 
				        HorizontalAlignment="Left" 
				        VerticalAlignment="Bottom" 
				        Margin="10,0,10,50"
                        Foreground="White"
				        TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" />
            <TextBlock Text="{Binding Event.trackName, TargetNullValue=TRACK_NAME}"
				        FontSize="15"
				        FontFamily="{StaticResource RobotoRegular}" 
				        HorizontalAlignment="Left" 
				        VerticalAlignment="Bottom" 
				        Margin="10,0,10,30"
                        Foreground="White"
				        TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" />
        </Grid>
        <ScrollViewer Grid.Row="1">
            <StackPanel Background="White">
                <Grid Margin="0,30,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="ms-appx:///Assets/clock.png"/>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Date and time"
							Foreground="Black"
							FontSize="18"
							FontFamily="{StaticResource RobotoRegular}"/>
                        <TextBlock Grid.Row="1" Text="{Binding Event, Converter={StaticResource EventDateTimeConverter}}"
							Foreground="{StaticResource DevoxxFontGrayBrush}"
							FontSize="15"
							FontFamily="{StaticResource RobotoRegular}"/>
                    </Grid>
                </Grid>
                <Grid x:Name="SpeakerGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="ms-appx:///Assets/Menu/speaker.png" Width="35" 
						VerticalAlignment="Top" Margin="0,7,0,0"/>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="Auto" MinHeight="25"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Presentor"
							Foreground="Black"
							FontSize="18"
							FontFamily="{StaticResource RobotoRegular}"/>
                        <ListView Grid.Row="1" ItemsSource="{Binding Event.SpeakerList}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Height" Value="30"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <!--<TextBlock Text="{Binding firstName}"
										Tag="{Binding uuid}"
										Foreground="{StaticResource DevoxxFontGrayBrush}"
										FontSize="15"
										FontFamily="{StaticResource RobotoRegular}" 
										TextWrapping="WrapWholeWords" Tapped="Speaker_Tapped"/>-->
                                    <Grid Tag="{Binding uuid}" Tapped="Speaker_Tapped">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border CornerRadius="15" Height="30" Width="30" Grid.Column="0"
                                                HorizontalAlignment="Right" 
                                                VerticalAlignment="Top"
                                                BorderThickness="1">
                                            <Border.Background>
                                                <ImageBrush ImageFailed="ImageBrush_ImageFailed">
                                                    <ImageBrush.ImageSource>
                                                        <BitmapImage
                                                            UriSource="{Binding Converter={StaticResource ResourceKey=SpeakerImageConverter}}" 
                                                            DecodePixelWidth="30"
                                                            DecodePixelHeight="30"
                                                            DecodePixelType="Logical"/>
                                                    </ImageBrush.ImageSource>
                                                </ImageBrush>
                                            </Border.Background>
                                        </Border>
                                        <TextBlock Text="{Binding fullName}" 
                                                   VerticalAlignment="Center" 
                                                   FontSize="15" 
                                                   Foreground="{StaticResource DevoxxFontGrayBrush}"
                                                   FontFamily="{StaticResource RobotoRegular}" 
                                                   Margin="5,0" 
                                                   TextTrimming="CharacterEllipsis"
                                                   Grid.Column="1"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="ms-appx:///Assets/place.png" Width="35"/>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Room"
							Foreground="Black"
							FontSize="18"
							FontFamily="{StaticResource RobotoRegular}"/>
                        <TextBlock Grid.Row="1" Text="{Binding Event.roomName}"
							Foreground="{StaticResource DevoxxFontGrayBrush}"
							FontSize="15"
							FontFamily="{StaticResource RobotoRegular}"/>
                    </Grid>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="ms-appx:///Assets/format.png" Width="35"/>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Format"
							Foreground="Black"
							FontSize="18"
							FontFamily="{StaticResource RobotoRegular}"/>
                        <TextBlock Grid.Row="1" Text="{Binding Event.talkType}"
							Foreground="{StaticResource DevoxxFontGrayBrush}"
							FontSize="15"
							FontFamily="{StaticResource RobotoRegular}"/>
                    </Grid>
                </Grid>
                <Border BorderBrush="Black" BorderThickness="0,1,0,0">
                    <TextBlock Text="{Binding Event.summary}"
						Foreground="{StaticResource DevoxxFontGrayBrush}"
						FontSize="15"
						FontFamily="{StaticResource RobotoRegular}"
						TextWrapping="WrapWholeWords" 
						Margin="10"/>

                </Border>
            </StackPanel>
        </ScrollViewer>
        <!--Star/Unstar-->
        <Grid Grid.RowSpan="2">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Tapped" >
                    <Core:InvokeCommandAction Command="{Binding StarCommand}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <Ellipse Height="50" Width="50" 
			    Fill="{StaticResource DevoxxBackgroundBrush}" 
			    Stroke="Gray" 
			    HorizontalAlignment="Right" 
			    VerticalAlignment="Top" Margin="0,125,10,0">
            </Ellipse>
            <Image Grid.RowSpan="2" 
			    Source="{Binding Event.Starred, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource EventStarredToImageConverter}}"
			    Height="30" Width="30"
			    HorizontalAlignment="Right" 
			    VerticalAlignment="Top" Margin="0,133,20,0"/>
        </Grid>
        <!--Twitter-->
        <Grid Grid.RowSpan="2">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Tapped" >
                    <Core:InvokeCommandAction Command="{Binding TwitterCommand}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <Ellipse Height="50" Width="50" 
	 		         Fill="{StaticResource DevoxxBackgroundBrush}" 
	 		         Stroke="Gray" 
		 	         HorizontalAlignment="Right" 
		   	         VerticalAlignment="Top" Margin="0,125,80,0"/>
            <Image Grid.RowSpan="2" 
			       Source="ms-appx:///Assets/twitter_white.png"
			       Height="30" Width="30"
			       HorizontalAlignment="Right" 
			       VerticalAlignment="Top" Margin="0,133,90,0"/>
        </Grid>

        <!--Notes-->
        <Grid Grid.RowSpan="2" Tapped="EditNote_Tapped">
            <Ellipse Grid.RowSpan="2" Height="50" Width="50" 
			         Fill="{StaticResource DevoxxBackgroundBrush}" 
			         Stroke="Gray" 
			         HorizontalAlignment="Right" 
			         VerticalAlignment="Top" Margin="0,125,150,0"/>
            <Image Grid.RowSpan="2" 
			       Source="ms-appx:///Assets/pencil_white.png"
			       Height="30" Width="30"
			       HorizontalAlignment="Right" 
			       VerticalAlignment="Top" Margin="0,133,160,0"/>
        </Grid>

        <!--Voting-->
        <Grid Grid.RowSpan="2" Tapped="OpenRating_Tapped" 
              Visibility="{Binding VotingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Ellipse Grid.RowSpan="2" Height="50" Width="50" 
			         Fill="{StaticResource DevoxxBackgroundBrush}" 
			         Stroke="Gray" 
			         HorizontalAlignment="Right" 
			         VerticalAlignment="Top" Margin="0,125,220,0"/>
            <Image Grid.RowSpan="2" 
			       Source="{Binding VotingImage}"
			       Height="30" Width="30"
			       HorizontalAlignment="Right" 
			       VerticalAlignment="Top" Margin="0,135,230,0"
                   ImageFailed="VotingImage_Failed"/>
        </Grid>

        <Grid Grid.RowSpan="2" Background="#7F000000" x:Name="NoteGrid" Visibility="Collapsed">
            <Grid Background="White" Margin="20">
                <Border BorderThickness="0,0,0,1" 
                        BorderBrush="{StaticResource DevoxxFontGrayBrush}"
                        Margin="10,10,10,40">
                    <TextBox HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             TextWrapping="Wrap" 
                             InputScope="AlphanumericFullWidth" 
                             PlaceholderText="Take some notes..." 
                             Text="{Binding Note.note, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                             AcceptsReturn="True"/>
                </Border>
                <TextBlock Text="CLOSE"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Right"
                           FontSize="18"
                           FontFamily="{StaticResource RobotoRegular}"
                           Margin="10"
                           Foreground="#FF298FCC" Tapped="Save_Tapped"/>
            </Grid>
        </Grid>

        <Grid Grid.RowSpan="2" 
              Background="#7F000000" 
              x:Name="VotingGrid" 
              Visibility="Collapsed">
            <Grid Margin="20"
                  Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Rate this talk"
                           Foreground="{StaticResource DevoxxFontGrayBrush}"
                           FontSize="22"
                           FontFamily="{StaticResource RobotoRegular}"
                           Margin="10"/>
                <ScrollViewer Grid.Row="1">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" 
                                    VerticalAlignment="Top" 
                                    HorizontalAlignment="Center"
                                    x:Name="RatingPanel">
                            <Image Source="ms-appx:///Assets/star_filled.png" Tag="1" Height="50" Tapped="Rating_Tapped" 
                                   Opacity="{Binding Vote.rating, Converter={StaticResource VotingOpacityConverter}, ConverterParameter=1, UpdateSourceTrigger=PropertyChanged}"></Image>
                            <Image Source="ms-appx:///Assets/star_filled.png" Tag="2" Height="50" Tapped="Rating_Tapped" 
                                   Opacity="{Binding Vote.rating, Converter={StaticResource VotingOpacityConverter}, ConverterParameter=2, UpdateSourceTrigger=PropertyChanged}"></Image>
                            <Image Source="ms-appx:///Assets/star_filled.png" Tag="3" Height="50" Tapped="Rating_Tapped" 
                                   Opacity="{Binding Vote.rating, Converter={StaticResource VotingOpacityConverter}, ConverterParameter=3, UpdateSourceTrigger=PropertyChanged}"></Image>
                            <Image Source="ms-appx:///Assets/star_filled.png" Tag="4" Height="50" Tapped="Rating_Tapped" 
                                   Opacity="{Binding Vote.rating, Converter={StaticResource VotingOpacityConverter}, ConverterParameter=4, UpdateSourceTrigger=PropertyChanged}"></Image>
                            <Image Source="ms-appx:///Assets/star_filled.png" Tag="5" Height="50" Tapped="Rating_Tapped" 
                                   Opacity="{Binding Vote.rating, Converter={StaticResource VotingOpacityConverter}, ConverterParameter=5, UpdateSourceTrigger=PropertyChanged}"></Image>
                        </StackPanel>

                        <Border BorderThickness="0,1" BorderBrush="{StaticResource DevoxxFontGrayBrush}" Margin="0,10,0,0">
                            <TextBlock Text="Optional feedback" 
                                       Foreground="{StaticResource DevoxxFontGrayBrush}"
                                       FontSize="18"
                                       Margin="10,5"
                                       TextWrapping="WrapWholeWords"/>
                        </Border>

                        <TextBlock Text="Content feedback:" 
                                   Foreground="{StaticResource DevoxxFontGrayBrush}"
                                   FontSize="18"
                                   Margin="15,10,15,0"
                                   TextWrapping="WrapWholeWords"/>
                        <TextBox Height="100" MaxLength="500" 
                                 PlaceholderText="Add a comment..."
                                 Background="LightGray" Margin="10,0"
                                 TextWrapping="Wrap"
                                 FontSize="18"
                                 Text="{Binding Vote.content, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 IsReadOnly="{Binding Vote.IsSent}"/>

                        <TextBlock Text="Delivery remarks:" 
                                   Foreground="{StaticResource DevoxxFontGrayBrush}"
                                   FontSize="18"
                                   Margin="15,10,15,0"
                                   TextWrapping="WrapWholeWords"/>
                        <TextBox Height="100" MaxLength="500" 
                                 PlaceholderText="Add a comment..."
                                 Background="LightGray" Margin="10,0"
                                 TextWrapping="Wrap"
                                 FontSize="18"
                                 Text="{Binding Vote.delivery, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 IsReadOnly="{Binding Vote.IsSent}"></TextBox>

                        <TextBlock Text="Anything else?" 
                                   Foreground="{StaticResource DevoxxFontGrayBrush}"
                                   FontSize="18"
                                   Margin="15,10,15,0"
                                   TextWrapping="WrapWholeWords"/>
                        <TextBox Height="100" MaxLength="500" 
                                 PlaceholderText="Add a comment..."
                                 Background="LightGray" Margin="10,0"
                                 TextWrapping="Wrap"
                                 FontSize="18"
                                 Text="{Binding Vote.other, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 IsReadOnly="{Binding Vote.IsSent}"></TextBox>
                    </StackPanel>
                </ScrollViewer>
                <Border Grid.Row="2"
                        BorderThickness="0,1,0,0" 
                        BorderBrush="{StaticResource DevoxxFontGrayBrush}">
                    <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
                        <TextBlock Text="SEND"
                                   FontSize="18"
                                   Margin="10"
                                   Foreground="#FF298FCC" 
                                   Visibility="{Binding Vote.IsSent, Converter={StaticResource NegBooleanToVisibilityConverter}}"
                                   Tapped="Vote_Tapped">
                        </TextBlock>
                        <TextBlock Text="CLOSE"
                                   FontSize="18"
                                   Margin="10"
                                   Foreground="#FF298FCC"  Tapped="Cancel_Tapped">
                        </TextBlock>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Page>
