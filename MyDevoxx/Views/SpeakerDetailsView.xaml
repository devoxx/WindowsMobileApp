<Page
    x:Class="MyDevoxx.Views.SpeakerDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyDevoxx.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:control="using:MyDevoxx.UserControls"
    xmlns:converter="using:MyDevoxx.Converter.View"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    DataContext="{Binding SpeakerDetails, Source={StaticResource Locator}}">

    <Page.Resources>
        <converter:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter"/>
    </Page.Resources>
    <Page.Background>
        <StaticResource ResourceKey="DevoxxBackgroundShadowBrush"/>
    </Page.Background>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="200"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Image Source="ms-appx:///Assets/FallbackData/Background.jpg" Stretch="UniformToFill" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.75"/>
            <Image Source="ms-appx:///Assets/arrow.left.png" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" Tapped="Image_Tapped" />

            <StackPanel HorizontalAlignment="Stretch"
				VerticalAlignment="Bottom" Margin="10">
                <Border CornerRadius="35" Height="70" Width="70"
                        BorderThickness="1" Margin="0,0,0,10"
                        HorizontalAlignment="Left">
                    <Border.Background>
                        <ImageBrush ImageFailed="SpeakerImageBrush_ImageFailed">
                            <ImageBrush.ImageSource>
                                <BitmapImage
                                    UriSource="{Binding Speaker.avatarURL}" 
                                    DecodePixelWidth="70"
                                    DecodePixelHeight="70"
                                    DecodePixelType="Logical"/>
                            </ImageBrush.ImageSource>
                        </ImageBrush>
                    </Border.Background>
                </Border>

                <TextBlock Text="{Binding Speaker.fullName}"
				           FontSize="20"
				           FontFamily="{StaticResource RobotoRegular}" 
                           Foreground="White"
				           TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" />
                <TextBlock Text="{Binding Speaker.company}"
				           FontSize="12"
				           FontFamily="{StaticResource RobotoRegular}" 
                           Foreground="White"
				           TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" />
            </StackPanel>
        </Grid>

        <ScrollViewer Grid.Row="1">
            <StackPanel Background="White">
                <Border BorderBrush="Black" BorderThickness="0,0,0,1" Margin="0,30,0,0">
                    <TextBlock Text="{Binding Speaker.bio}"
						Foreground="{StaticResource DevoxxFontGrayBrush}"
						FontSize="15"
						FontFamily="{StaticResource RobotoRegular}"
						TextWrapping="WrapWholeWords" 
						Margin="10"/>

                </Border>

                <TextBlock Text="Talks"
                           FontSize="20"
                           FontFamily="{StaticResource RobotoRegular}"
                           Margin="10"
                           Foreground="{StaticResource DevoxxBackgroundBrush}"/>

                <ListView ItemsSource="{Binding EventList}" Margin="10,0,10,10">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <control:EventTalkControl Margin="0,5" Tapped="EventTalkControl_Tapped" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </ScrollViewer>
        <!--Twitter-->
        <Grid Grid.RowSpan="2" Visibility="{Binding Speaker.twitter, Converter={StaticResource ObjectToVisibilityConverter}, FallbackValue=Collapsed}">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Tapped" >
                    <Core:InvokeCommandAction Command="{Binding TwitterCommand}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <Ellipse Height="50" Width="50"
			    Fill="{StaticResource DevoxxBackgroundBrush}" 
			    Stroke="LightGray" 
			    HorizontalAlignment="Right" 
			    VerticalAlignment="Top" Margin="0,175,80,0"/>
            <Image Grid.RowSpan="2" 
			    Source="ms-appx:///Assets/twitter_white.png"
			    Height="30" Width="30"
			    HorizontalAlignment="Right" 
			    VerticalAlignment="Top" Margin="0,185,90,0"/>
        </Grid>
        <!--Blog-->
        <Grid Grid.RowSpan="2" Visibility="{Binding Speaker.blog, Converter={StaticResource ObjectToVisibilityConverter}, FallbackValue=Collapsed}">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Tapped" >
                    <Core:InvokeCommandAction Command="{Binding BlogCommand}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <Ellipse Height="50" Width="50" 
			    Fill="{StaticResource DevoxxBackgroundBrush}" 
			    Stroke="LightGray" 
			    HorizontalAlignment="Right" 
			    VerticalAlignment="Top" Margin="0,175,10,0">
            </Ellipse>
            <Image Grid.RowSpan="2" 
			    Source="ms-appx:///Assets/globe_white.png"
			    Height="30" Width="30"
			    HorizontalAlignment="Right" 
			    VerticalAlignment="Top" Margin="0,185,20,0"/>
        </Grid>

        <Grid Grid.RowSpan="2" Visibility="Visible" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0,2,0,0">
            <ProgressBar x:Name="LoadingIndicator" 
                         Background="{x:Null}" 
                         IsIndeterminate="{Binding ShowLoadingIndicator}"/>
        </Grid>
    </Grid>
</Page>
