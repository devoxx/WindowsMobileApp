<Page
    x:Class="MyDevoxx.Views.ScheduleView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyDevoxx.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:MyDevoxx.ViewModel"
    xmlns:control="using:MyDevoxx.UserControls"
    xmlns:converter="using:MyDevoxx.Converter.View"    
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" 
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Background="{StaticResource DevoxxBackgroundShadowBrush}"
    FontFamily="/Assets/fonts/Roboto-Regular.ttf#Roboto"
    DataContext="{Binding Schedule, Source={StaticResource Locator}}"
    x:Name="Schedule">

    <Page.Resources>
        <converter:TalkCountConverter x:Key="TalkCountConverter"/>
        <converter:TrackCountConverter x:Key="TrackCountConverter"/>
        <converter:BorderColorConverter x:Key="BorderColorConverter"/>

        <DataTemplate x:Key="TalkTemplate">
            <control:EventTalkControl Margin="5,0,5,15" Tapped="EventTalkControl_Tapped"/>
        </DataTemplate>

        <DataTemplate x:Key="BreakTemplate">
            <control:EventBreakControl Margin="5,0,5,15"/>
        </DataTemplate>

        <DataTemplate x:Key="ListTemplate">
            <Grid Margin="5,0,5,15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Tapped="Grid_Tapped">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="75"/>
                    </Grid.ColumnDefinitions>

                    <Rectangle Fill="Transparent" Grid.ColumnSpan="3"/>

                    <Image Grid.Column="0" Width="50" Source="ms-appx:///Assets/Menu/schedule.png" />

                    <Grid Grid.Column="1">
                        <TextBlock Text="{Binding Count, Converter={StaticResource TalkCountConverter}}" 
                                   VerticalAlignment="Top"
                                   FontSize="18" 
                                   FontFamily="{StaticResource RobotoRegular}" 
                                   Foreground="{StaticResource DevoxxFontGrayBrush}"
                                   TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" Margin="5,7,5,0"/>
                        <TextBlock Text="{Binding Converter={StaticResource TrackCountConverter}}" 
                                   VerticalAlignment="Top" 
                                   Foreground="Gray"
                                   FontSize="12" 
                                   FontFamily="{StaticResource RobotoRegular}" 
                                   TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" Margin="5,30,5,0"/>
                    </Grid>

                    <Path Grid.Column="2" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M2,3L9,10 16,3"  StrokeThickness="2" >
                        <Path.RenderTransform>
                            <CompositeTransform Rotation="0"/>
                        </Path.RenderTransform>
                        <Path.Stroke>
                            <SolidColorBrush Color="{StaticResource MediaControlTimeRowThemeColor}"/>
                        </Path.Stroke>
                    </Path>
                </Grid>
                <ListView ItemsSource="{Binding}" ItemTemplate="{StaticResource TalkTemplate}" Grid.Row="1" Visibility="Collapsed">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border x:Name="OuterContainer" RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <ScaleTransform x:Name="ContentScaleTransform"/>
                                            </Border.RenderTransform>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="Pressed" To="Normal">
                                                            <Storyboard>
                                                                <!--<PointerUpThemeAnimation Storyboard.TargetName="TiltContainer"/>-->
                                                            </Storyboard>
                                                        </VisualTransition>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <!--<PointerDownThemeAnimation Storyboard.TargetName="TiltContainer"/>-->
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckboxPressed">
                                                        <Storyboard>
                                                            <PointerDownThemeAnimation Storyboard.TargetName="CheckboxTiltContainer"/>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="SelectedBorder">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedGlyph">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="SelectionStates">
                                                    <VisualState x:Name="Unselected"/>
                                                    <VisualState x:Name="Selected">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="SelectedUnfocused">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                                    <VisualState x:Name="DataAvailable"/>
                                                    <VisualState x:Name="DataPlaceholder">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="MultiSelectStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="ListMultiSelect" GeneratedDuration="0:0:0.15" To="NoMultiSelect"/>
                                                        <VisualTransition From="NoMultiSelect" GeneratedDuration="0:0:0.15" To="ListMultiSelect"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="NoMultiSelect"/>
                                                    <VisualState x:Name="ListMultiSelect">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CheckboxContainerTranslateTransform"/>
                                                            <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemContentTranslateX}" Storyboard.TargetProperty="X" Storyboard.TargetName="ContentBorderTranslateTransform"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="GridMultiSelect">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="ReorderModeStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="ReorderEnabled" GeneratedDuration="00:00:00.2" To="ReorderDisabled"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="ReorderEnabled">
                                                        <Storyboard>
                                                            <DropTargetItemThemeAnimation Storyboard.TargetName="OuterContainer"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Reorderable">
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentScaleTransform">
                                                                <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                                                <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentScaleTransform">
                                                                <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                                                <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="ReorderDisabled"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="ReorderHintStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="NoReorderHint"/>
                                                    <VisualState x:Name="BottomReorderHint">
                                                        <Storyboard>
                                                            <DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="RightReorderHint">
                                                        <Storyboard>
                                                            <DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="TopReorderHint">
                                                        <Storyboard>
                                                            <DragOverThemeAnimation Direction="Top" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="LeftReorderHint">
                                                        <Storyboard>
                                                            <DragOverThemeAnimation Direction="Left" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                                <Border x:Name="CheckboxTiltContainer" HorizontalAlignment="Left" Margin="{ThemeResource ListViewItemMultiselectCheckBoxMargin}" VerticalAlignment="Top">
                                                    <Border x:Name="CheckboxOuterContainer">
                                                        <Border.Clip>
                                                            <RectangleGeometry Rect="0,0,25.5,25.5"/>
                                                        </Border.Clip>
                                                        <Grid x:Name="CheckboxContainer">
                                                            <Grid.RenderTransform>
                                                                <TranslateTransform x:Name="CheckboxContainerTranslateTransform" X="{ThemeResource ListViewItemContentOffsetX}"/>
                                                            </Grid.RenderTransform>
                                                            <Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" Height="25.5" Stroke="{ThemeResource CheckBoxBorderThemeBrush}" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" Width="25.5"/>
                                                            <Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Opacity="0" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" VerticalAlignment="Center" Width="18.5"/>
                                                        </Grid>
                                                    </Border>
                                                </Border>
                                                <Border x:Name="ContentContainer">
                                                    <Border x:Name="TiltContainer">
                                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                            <Border.RenderTransform>
                                                                <TranslateTransform x:Name="ContentBorderTranslateTransform"/>
                                                            </Border.RenderTransform>
                                                            <Grid>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                                                <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </Border>
                                                    </Border>
                                                </Border>
                                                <Border x:Name="SelectedBorder" BorderBrush="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" BorderThickness="{ThemeResource GridViewItemMultiselectBorderThickness}" IsHitTestVisible="False" Opacity="0">
                                                    <Grid x:Name="SelectedCheckMark" HorizontalAlignment="Right" Height="34" Opacity="0" VerticalAlignment="Top" Width="34">
                                                        <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
                                                        <Path x:Name="SelectedGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="14.5" Margin="0,1,1,0" Stretch="Fill" VerticalAlignment="Top" Width="17"/>
                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
        </DataTemplate>

        <local:ScheduleListTemplateSelector x:Key="SelectingTemplate"
            TalkTemplate="{StaticResource TalkTemplate}"
            BreakTemplate="{StaticResource BreakTemplate}" 
            ListTemplate="{StaticResource ListTemplate}"/>
    </Page.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="Orientation">
                <VisualState x:Name="Portrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="FirstRow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="70" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Landscape">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Height" Storyboard.TargetName="FirstRow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="45" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="70" x:Name="FirstRow"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="50"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="{StaticResource DevoxxBackgroundBrush}">
            <control:Header Filter="True" Search="True" x:Name="ScheduleHeader" FilterTapped="ScheduleHeader_FilterTapped">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="SearchTapped" >
                        <Core:InvokeCommandAction Command="{Binding DataContext.SearchCommand, ElementName=Schedule}" />
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </control:Header>
        </Grid>

        <Pivot Grid.Row="1" ItemsSource="{Binding PivotItems}" Background="White" x:Name="SchedulePivot">
            <Pivot.Transitions>
                <TransitionCollection>
                    <EdgeUIThemeTransition Edge="Left"/>
                </TransitionCollection>
            </Pivot.Transitions>
            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding title}" TextAlignment="Center"></TextBlock>
                </DataTemplate>
            </Pivot.HeaderTemplate>
            <Pivot.ItemTemplate>
                <DataTemplate>
                    <PivotItem>
                        <PivotItem.Resources>
                            <CollectionViewSource x:Key="src" IsSourceGrouped="True" Source="{Binding slotGroups, UpdateSourceTrigger=PropertyChanged}" ItemsPath="EventLists"/>
                        </PivotItem.Resources>
                        <ListView Margin="0" ItemsSource="{Binding Source={StaticResource src}, UpdateSourceTrigger=PropertyChanged}"
                                  ItemTemplateSelector="{StaticResource SelectingTemplate}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Background" Value="Transparent"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.GroupStyle>
                                <GroupStyle HidesIfEmpty="True">
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <Border BorderBrush="{Binding Converter={StaticResource BorderColorConverter}}">
                                                <Border.BorderThickness>
                                                    <Thickness Top="1"></Thickness>
                                                </Border.BorderThickness>
                                                <TextBlock Text="{Binding GroupName}" FontSize="18" Foreground="{StaticResource DevoxxBackgroundBrush}" HorizontalAlignment="Stretch" Margin="10,5,0,5"></TextBlock>
                                            </Border>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                    <GroupStyle.HeaderContainerStyle>
                                        <Style TargetType="ListViewHeaderItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </GroupStyle.HeaderContainerStyle>
                                </GroupStyle>
                            </ListView.GroupStyle>
                        </ListView>
                    </PivotItem>
                </DataTemplate>
            </Pivot.ItemTemplate>
        </Pivot>

        <control:NavigationBar Grid.Row="2" Current="SCHEDULE"/>

        <Grid Grid.RowSpan="3" Background="#7F000000" x:Name="FilterGrid" Visibility="Collapsed">
            <Grid Margin="20"
                  Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Filter"
                           Foreground="{StaticResource DevoxxFontGrayBrush}"
                           FontSize="22"
                           FontFamily="{StaticResource RobotoRegular}"
                           Margin="10"/>
                <ScrollViewer Grid.Row="1">
                    <StackPanel>
                        <Grid x:Name="DayFilterGrid" Tapped="DayFilterGrid_Tapped">
                            <TextBlock Text="Days"
                                       Foreground="{StaticResource DevoxxFontGrayBrush}"
                                       FontSize="18"
                                       FontFamily="{StaticResource RobotoRegular}"
                                       Margin="15,0,10,10"/>
                            <Path Grid.Column="2" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" 
                                  VerticalAlignment="Center" Data="M2,3L9,10 16,3"  StrokeThickness="2" Margin="0,0,15,0" >
                                <Path.RenderTransform>
                                    <CompositeTransform Rotation="0"/>
                                </Path.RenderTransform>
                                <Path.Stroke>
                                    <SolidColorBrush Color="{StaticResource MediaControlTimeRowThemeColor}"/>
                                </Path.Stroke>
                            </Path>
                        </Grid>
                        <ListView ItemsSource="{Binding DayList}" Margin="15,0,10,10" x:Name="DayFilterList" Visibility="Collapsed">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Foreground="{StaticResource DevoxxFontGrayBrush}"
                                              FontSize="15"
                                              FontFamily="{StaticResource RobotoRegular}"
                                              Content="{Binding Title}" Background="{StaticResource DevoxxBackgroundBrush}"
                                              IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}">
                                        <Interactivity:Interaction.Behaviors>
                                            <Core:EventTriggerBehavior EventName="Tapped" >
                                                <Core:InvokeCommandAction Command="{Binding DataContext.DayFilterCommand, ElementName=Schedule}" CommandParameter="{Binding}"/>
                                            </Core:EventTriggerBehavior>
                                        </Interactivity:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <Grid x:Name="TrackFilterGrid" Tapped="TrackFilterGrid_Tapped">
                            <TextBlock Text="Tracks"
                                       Foreground="{StaticResource DevoxxFontGrayBrush}"
                                       FontSize="18"
                                       FontFamily="{StaticResource RobotoRegular}"
                                       Margin="15,0,10,10"/>
                            <Path Grid.Column="2" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" 
                                  VerticalAlignment="Center" Data="M2,3L9,10 16,3"  StrokeThickness="2" Margin="0,0,15,0" >
                                <Path.RenderTransform>
                                    <CompositeTransform Rotation="0"/>
                                </Path.RenderTransform>
                                <Path.Stroke>
                                    <SolidColorBrush Color="{StaticResource MediaControlTimeRowThemeColor}"/>
                                </Path.Stroke>
                            </Path>
                        </Grid>
                        <ListView ItemsSource="{Binding TrackList}" Margin="15,0,10,10" x:Name="TrackFilterList" Visibility="Collapsed">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="MinHeight" Value="10"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Foreground="{StaticResource DevoxxFontGrayBrush}"
                                              FontSize="15"
                                              FontFamily="{StaticResource RobotoRegular}"
                                              Content="{Binding Title}" Background="{StaticResource DevoxxBackgroundBrush}"
                                              IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}">
                                        <Interactivity:Interaction.Behaviors>
                                            <Core:EventTriggerBehavior EventName="Tapped" >
                                                <Core:InvokeCommandAction Command="{Binding DataContext.TrackFilterCommand, ElementName=Schedule}" CommandParameter="{Binding}"/>
                                            </Core:EventTriggerBehavior>
                                        </Interactivity:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </ScrollViewer>
                <Border Grid.Row="2"
                        BorderThickness="0,1,0,0" 
                        BorderBrush="{StaticResource DevoxxFontGrayBrush}">
                    <Grid>
                        <TextBlock Text="APPLY"
                                   FontSize="18"
                                   HorizontalAlignment="Right"
                                   Margin="10,10,20,10"
                                   Foreground="#FF298FCC" Tapped="Apply_Tapped">
                        </TextBlock>
                        <TextBlock Text="CLEAR"
                                   FontSize="18"
                                   HorizontalAlignment="Right"
                                   Margin="10,10,100,10"
                                   Foreground="#FF298FCC"  Tapped="Clear_Tapped">
                        </TextBlock>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Page>